{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Downloads\\\\desafio\\\\frontend-desafio\\\\src\\\\Body\\\\BodyRegister.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Form, Input, Select } from 'antd';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nconst App = () => {\n  _s();\n  const [form] = Form.useForm();\n  const onGenderChange = value => {\n    switch (value) {\n      case 'male':\n        form.setFieldsValue({\n          note: 'Hi, man!'\n        });\n        return;\n      case 'female':\n        form.setFieldsValue({\n          note: 'Hi, lady!'\n        });\n        return;\n      case 'other':\n        form.setFieldsValue({\n          note: 'Hi there!'\n        });\n    }\n  };\n  const onFinish = values => {\n    console.log(values);\n  };\n  const onReset = () => {\n    form.resetFields();\n  };\n  const onFill = () => {\n    form.setFieldsValue({\n      note: 'Hello world!',\n      gender: 'male'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    ...layout,\n    form: form,\n    name: \"control-hooks\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"note\",\n      label: \"Note\",\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"gender\",\n      label: \"Gender\",\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select a option and change input text above\",\n        onChange: onGenderChange,\n        allowClear: true,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"male\",\n          children: \"male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"female\",\n          children: \"female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"other\",\n          children: \"other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      noStyle: true,\n      shouldUpdate: (prevValues, currentValues) => prevValues.gender !== currentValues.gender,\n      children: _ref => {\n        let {\n          getFieldValue\n        } = _ref;\n        return getFieldValue('gender') === 'other' ? /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"customizeGender\",\n          label: \"Customize Gender\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : null;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      ...tailLayout,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"button\",\n        onClick: onReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        htmlType: \"button\",\n        onClick: onFill,\n        children: \"Fill form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","Form","Input","Select","React","Option","layout","labelCol","span","wrapperCol","tailLayout","offset","App","form","useForm","onGenderChange","value","setFieldsValue","note","onFinish","values","console","log","onReset","resetFields","onFill","gender","required","prevValues","currentValues","getFieldValue"],"sources":["C:/Users/mathe/Downloads/desafio/frontend-desafio/src/Body/BodyRegister.tsx"],"sourcesContent":["import { Button, Form, Input, Select } from 'antd';\r\nimport React from 'react';\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onGenderChange = (value: string) => {\r\n    switch (value) {\r\n      case 'male':\r\n        form.setFieldsValue({ note: 'Hi, man!' });\r\n        return;\r\n      case 'female':\r\n        form.setFieldsValue({ note: 'Hi, lady!' });\r\n        return;\r\n      case 'other':\r\n        form.setFieldsValue({ note: 'Hi there!' });\r\n    }\r\n  };\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFill = () => {\r\n    form.setFieldsValue({\r\n      note: 'Hello world!',\r\n      gender: 'male',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n      <Form.Item name=\"note\" label=\"Note\" rules={[{ required: true }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name=\"gender\" label=\"Gender\" rules={[{ required: true }]}>\r\n        <Select\r\n          placeholder=\"Select a option and change input text above\"\r\n          onChange={onGenderChange}\r\n          allowClear\r\n        >\r\n          <Option value=\"male\">male</Option>\r\n          <Option value=\"female\">female</Option>\r\n          <Option value=\"other\">other</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        noStyle\r\n        shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\r\n      >\r\n        {({ getFieldValue }) =>\r\n          getFieldValue('gender') === 'other' ? (\r\n            <Form.Item name=\"customizeGender\" label=\"Customize Gender\" rules={[{ required: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n          ) : null\r\n        }\r\n      </Form.Item>\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Button htmlType=\"button\" onClick={onReset}>\r\n          Reset\r\n        </Button>\r\n        <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\r\n          Fill form\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}