{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Downloads\\\\desafio\\\\frontend-desafio\\\\src\\\\Body\\\\BodyTable.tsx\",\n  _s = $RefreshSig$();\nimport { FunnelPlotOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Button, Input, InputNumber, Space, Table, Popconfirm, Form, Typography } from 'antd';\nimport Item from 'antd/es/descriptions/Item';\nimport React, { useRef, useState } from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst EditableCell = _ref => {\n  let {\n    editing,\n    dataIndex,\n    title,\n    inputType,\n    record,\n    index,\n    children,\n    ...restProps\n  } = _ref;\n  const inputNode = inputType === 'number' ? /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 48\n  }, this) : /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 66\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    ...restProps,\n    children: editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: `Please Input ${title}!`\n      }],\n      children: inputNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n_c = EditableCell;\nconst App = () => {\n  _s();\n  const [dataSource, setDataSource] = useState([{\n    key: \"1\",\n    name: 'Matheus',\n    email: 'matheus_orbotafogo@hotmail.com',\n    gender: 'Masculino',\n    birthDate: \"10/02/1999\",\n    phone: \"(43) 9999-9999\"\n  }, {\n    key: \"2\",\n    name: 'serg',\n    email: 'teste@gmail.com',\n    gender: 'Masculino',\n    birthDate: \"10/02/1999\",\n    phone: \"(43) 9999-9999\"\n  }, {\n    key: \"3\",\n    name: 'rar',\n    email: 'ola@outlook.com',\n    gender: 'Masculino',\n    birthDate: \"10/02/1999\",\n    phone: \"(43) 9999-9999\"\n  }, {\n    key: \"4\",\n    name: 'Matheaeaeeus',\n    email: 'matheus@hotmail.com',\n    gender: 'Masculino',\n    birthDate: \"10/02/1999\",\n    phone: \"(43) 9999-9999\"\n  }]);\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState('');\n  const searchInput = useRef(null);\n  const [data, setData] = useState(dataSource);\n  const [editingKey, setEditingKey] = useState('');\n  const [form] = Form.useForm();\n  const isEditing = record => record.key === editingKey;\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n  const handleDelete = key => {\n    const newData = dataSource.filter(item => item.key !== key);\n    setDataSource(newData);\n  };\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('');\n  };\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: _ref2 => {\n      let {\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters,\n        close\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        onKeyDown: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: searchInput,\n          placeholder: `Buscar ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 23\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            size: \"small\",\n            icon: /*#__PURE__*/_jsxDEV(FunnelPlotOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 23\n            }, this),\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              setSearchText(selectedKeys[0]);\n              setSearchedColumn(dataIndex);\n            },\n            children: \"Filtrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => clearFilters && handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Resetar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              close();\n            },\n            children: \"Fechar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this);\n    },\n    filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n      style: {\n        color: filtered ? '#1890ff' : undefined\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }, this),\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: visible => {\n      if (visible) {\n        setTimeout(() => {\n          var _searchInput$current;\n          return (_searchInput$current = searchInput.current) === null || _searchInput$current === void 0 ? void 0 : _searchInput$current.select();\n        }, 100);\n      }\n    },\n    render: text => searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n      highlightStyle: {\n        backgroundColor: '#ffc069',\n        padding: 0\n      },\n      searchWords: [searchText],\n      autoEscape: true,\n      textToHighlight: text ? text.toString() : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this) : text\n  });\n  const edit = record => {\n    form.setFieldsValue({\n      name: '',\n      email: '',\n      gender: '',\n      birthDate: '',\n      phone: '',\n      ...record\n    });\n    setEditingKey(record.key);\n  };\n  const cancel = () => {\n    setEditingKey('');\n  };\n  const save = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row\n        });\n        setData(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    }\n  };\n  const columns = [{\n    title: 'Nome',\n    dataIndex: 'name',\n    key: 'name',\n    editable: true,\n    ...getColumnSearchProps('name')\n  }, {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n    editable: true,\n    ...getColumnSearchProps('email')\n  }, {\n    title: 'GenÃªro',\n    dataIndex: 'gender',\n    editable: true\n  }, {\n    title: 'Data de Nascimento',\n    dataIndex: 'birthDate',\n    editable: true\n  }, {\n    title: 'Telefone',\n    dataIndex: 'phone',\n    editable: true\n  }, {\n    title: 'Remover',\n    dataIndex: '',\n    key: 'x',\n    render: (_, record) => dataSource.length >= 1 ? /*#__PURE__*/_jsxDEV(Popconfirm, {\n      title: \"Sure to delete?\",\n      onConfirm: () => handleDelete(record.key),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }, this) : null\n  }, {\n    title: 'Editar',\n    dataIndex: 'edit',\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography.Link, {\n          onClick: () => save(record.key),\n          style: {\n            marginRight: 8\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: cancel,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(Typography.Link, {\n        disabled: editingKey !== '',\n        onClick: () => edit(record),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 19\n      }, this);\n    }\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      components: {\n        body: {\n          cell: EditableCell\n        }\n      },\n      bordered: true,\n      dataSource: data,\n      columns: mergedColumns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: cancel\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"e4bt5PC63hT9/BqRURxinmKEfXw=\", false, function () {\n  return [Form.useForm];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["FunnelPlotOutlined","SearchOutlined","Button","Input","InputNumber","Space","Table","Popconfirm","Form","Typography","Item","React","useRef","useState","Highlighter","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","message","App","dataSource","setDataSource","key","name","email","gender","birthDate","phone","searchText","setSearchText","searchedColumn","setSearchedColumn","searchInput","data","setData","editingKey","setEditingKey","form","useForm","isEditing","handleSearch","selectedKeys","confirm","handleDelete","newData","filter","item","handleReset","clearFilters","getColumnSearchProps","filterDropdown","setSelectedKeys","close","padding","e","stopPropagation","target","value","marginBottom","display","width","closeDropdown","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownOpenChange","visible","setTimeout","current","select","render","text","backgroundColor","edit","setFieldsValue","cancel","save","row","validateFields","findIndex","splice","push","errInfo","console","log","columns","editable","_","length","marginRight","mergedColumns","map","col","onCell","body","cell","onChange"],"sources":["C:/Users/mathe/Downloads/desafio/frontend-desafio/src/Body/BodyTable.tsx"],"sourcesContent":["import { FunnelPlotOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { Button, Input, InputNumber, Space, Table, InputRef, Popconfirm, Form, Typography} from 'antd';\r\nimport Item from 'antd/es/descriptions/Item';\r\nimport type { ColumnsType, ColumnType} from 'antd/es/table';\r\nimport type { FilterConfirmProps } from 'antd/es/table/interface';\r\nimport React, { useRef, useState } from 'react';\r\nimport Highlighter from 'react-highlight-words';\r\n\r\ninterface Item {\r\n    key: string;\r\n    name: string;\r\n    email: string;\r\n    gender: string;\r\n    birthDate: string;\r\n    phone: string;\r\n};\r\n\r\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\r\n    editing: boolean;\r\n    dataIndex: string;\r\n    title: any;\r\n    inputType: 'number' | 'text';\r\n    record: Item;\r\n    index: number;\r\n    children: React.ReactNode;\r\n  }\r\n  \r\n  const EditableCell: React.FC<EditableCellProps> = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n  }) => {\r\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n  \r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item\r\n            name={dataIndex}\r\n            style={{ margin: 0 }}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `Please Input ${title}!`,\r\n              },\r\n            ]}\r\n          >\r\n            {inputNode}\r\n          </Form.Item>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n\r\ntype DataIndex = keyof Item;\r\n\r\nconst App: React.FC = () => {    \r\n    const [dataSource, setDataSource] = useState<Item[]>([\r\n        {\r\n            key: \"1\",\r\n            name: 'Matheus',\r\n            email: 'matheus_orbotafogo@hotmail.com',\r\n            gender: 'Masculino',\r\n            birthDate: \"10/02/1999\",\r\n            phone: \"(43) 9999-9999\"\r\n        },\r\n        {\r\n            key: \"2\",\r\n            name: 'serg',\r\n            email: 'teste@gmail.com',\r\n            gender: 'Masculino',\r\n            birthDate: \"10/02/1999\",\r\n            phone: \"(43) 9999-9999\"\r\n        },\r\n        {\r\n            key: \"3\",\r\n            name: 'rar',\r\n            email: 'ola@outlook.com',\r\n            gender: 'Masculino',\r\n            birthDate: \"10/02/1999\",\r\n            phone: \"(43) 9999-9999\"\r\n        },\r\n        {\r\n            key: \"4\",\r\n            name: 'Matheaeaeeus',\r\n            email: 'matheus@hotmail.com',\r\n            gender: 'Masculino',\r\n            birthDate: \"10/02/1999\",\r\n            phone: \"(43) 9999-9999\"\r\n        },\r\n    ]);\r\n\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchedColumn, setSearchedColumn] = useState('');\r\n    const searchInput = useRef<InputRef>(null);\r\n    const [data, setData] = useState(dataSource);\r\n    const [editingKey, setEditingKey] = useState('');\r\n    const [form] = Form.useForm();\r\n\r\n    const isEditing = (record: Item) => record.key === editingKey;\r\n\r\n    \r\n    const handleSearch = (\r\n        selectedKeys: string[],\r\n        confirm: (param?: FilterConfirmProps) => void,\r\n        dataIndex: DataIndex,\r\n    ) => {\r\n        confirm();\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n\r\n    const handleDelete = (key: React.Key) => {\r\n        const newData = dataSource.filter((item) => item.key !== key);\r\n        setDataSource(newData);\r\n    };\r\n\r\n    \r\n    const handleReset = (clearFilters: () => void) => {\r\n        clearFilters();\r\n        setSearchText('');\r\n    };\r\n\r\n    const getColumnSearchProps = (dataIndex: DataIndex): ColumnType<Item> => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters, close }) => (\r\n          <div style={{ padding: 8 }} onKeyDown={e => e.stopPropagation()}>\r\n            <Input\r\n              ref={searchInput}\r\n              placeholder={`Buscar ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => handleSearch(selectedKeys as string[], confirm, dataIndex)}\r\n              style={{ marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Space>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => handleSearch(selectedKeys as string[], confirm, dataIndex)}\r\n                icon={<SearchOutlined />}\r\n                size=\"small\"\r\n                style={{ width: 90 }}\r\n              >\r\n                Buscar\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                icon={<FunnelPlotOutlined />}\r\n                onClick={() => {\r\n                  confirm({ closeDropdown: false });\r\n                  setSearchText((selectedKeys as string[])[0]);\r\n                  setSearchedColumn(dataIndex);\r\n                }}\r\n              >\r\n                Filtrar\r\n              </Button>\r\n    \r\n              <Button\r\n                onClick={() => clearFilters && handleReset(clearFilters)}\r\n                size=\"small\"\r\n                style={{ width: 90 }}\r\n              >\r\n                Resetar\r\n              </Button>\r\n    \r\n              <Button\r\n                type=\"link\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  close();\r\n                }}\r\n              >\r\n                Fechar\r\n              </Button>\r\n            </Space>\r\n          </div>\r\n        ),\r\n        filterIcon: (filtered: boolean) => (\r\n          <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes((value as string).toLowerCase()),\r\n        onFilterDropdownOpenChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => searchInput.current?.select(), 100);\r\n          }\r\n        },\r\n        render: text =>\r\n          searchedColumn === dataIndex ? (\r\n            <Highlighter\r\n              highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n              searchWords={[searchText]}\r\n              autoEscape\r\n              textToHighlight={text ? text.toString() : ''}\r\n            />\r\n          ) : (\r\n            text\r\n        ),\r\n    });  \r\n\r\n    const edit = (record: Partial<Item> & { key: React.Key }) => {\r\n        form.setFieldsValue({ name: '', email: '', gender: '', birthDate: '', phone: '', ...record });\r\n        setEditingKey(record.key);\r\n    };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key: React.Key) => {\r\n    try {\r\n      const row = (await form.validateFields()) as Item;\r\n\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n    \r\n    const columns = [\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            editable: true,\r\n            ...getColumnSearchProps('name'),\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n            editable: true,\r\n            ...getColumnSearchProps('email'),\r\n        },\r\n        {\r\n            title: 'GenÃªro',\r\n            dataIndex: 'gender',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'Data de Nascimento',\r\n            dataIndex: 'birthDate',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'phone',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'Remover',\r\n            dataIndex:'',\r\n            key:'x',\r\n            render: (_: any, record: { key: React.Key }) =>\r\n            dataSource.length >= 1 ? (\r\n              <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\r\n                <a>Delete</a>\r\n              </Popconfirm>\r\n            ) : null,\r\n        },\r\n        {\r\n            title: 'Editar',\r\n            dataIndex: 'edit',\r\n            render: (_: any, record: Item) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                  <span>\r\n                    <Typography.Link onClick={() => save(record.key)} style={{ marginRight: 8 }}>\r\n                      Save\r\n                    </Typography.Link>\r\n                    <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n                      <a>Cancel</a>\r\n                    </Popconfirm>\r\n                  </span>\r\n                ) : (\r\n                  <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                    Edit\r\n                  </Typography.Link>\r\n                );\r\n              },\r\n        },     \r\n    ] ;         \r\n    \r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n          return col;\r\n        }\r\n        return {\r\n          ...col,\r\n          onCell: (record: Item) => ({\r\n            record,\r\n            inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            editing: isEditing(record),\r\n          }),\r\n        };\r\n      });\r\n\r\n    return (\r\n        <Form form={form} component={false}>\r\n          <Table\r\n            components={{\r\n              body: {\r\n                cell: EditableCell,\r\n              },\r\n            }}\r\n            bordered\r\n            dataSource={data}\r\n            columns={mergedColumns}\r\n            rowClassName=\"editable-row\"\r\n            pagination={{\r\n              onChange: cancel,\r\n            }}\r\n          />\r\n        </Form>\r\n      );\r\n};\r\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}