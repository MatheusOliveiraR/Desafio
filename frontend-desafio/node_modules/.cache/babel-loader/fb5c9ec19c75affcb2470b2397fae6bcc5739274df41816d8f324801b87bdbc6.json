{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Downloads\\\\desafio\\\\frontend-desafio\\\\src\\\\Body\\\\BodyList.tsx\";\nimport React from 'react';\nimport './index.css';\nimport { Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  filters: [{\n    text: 'Joe',\n    value: 'Joe'\n  }, {\n    text: 'Category 1',\n    value: 'Category 1'\n  }, {\n    text: 'Category 2',\n    value: 'Category 2'\n  }],\n  filterMode: 'tree',\n  filterSearch: true,\n  onFilter: (value, record) => record.name.startsWith(value),\n  width: '30%'\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  filters: [{\n    text: 'London',\n    value: 'London'\n  }, {\n    text: 'New York',\n    value: 'New York'\n  }],\n  onFilter: (value, record) => record.address.startsWith(value),\n  filterSearch: true,\n  width: '40%'\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\nconst onChange = (pagination, filters, sorter, extra) => {\n  console.log('params', pagination, filters, sorter, extra);\n};\nconst App = () => /*#__PURE__*/_jsxDEV(Table, {\n  columns: columns,\n  dataSource: data,\n  onChange: onChange\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 29\n}, this);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Table","columns","title","dataIndex","filters","text","value","filterMode","filterSearch","onFilter","record","name","startsWith","width","sorter","a","b","age","address","data","key","onChange","pagination","extra","console","log","App"],"sources":["C:/Users/mathe/Downloads/desafio/frontend-desafio/src/Body/BodyList.tsx"],"sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport { Table } from 'antd';\r\nimport type { ColumnsType, TableProps } from 'antd/es/table';\r\n\r\ninterface DataType {\r\n  key: React.Key;\r\n  name: string;\r\n  age: number;\r\n  address: string;\r\n}\r\n\r\nconst columns: ColumnsType<DataType> = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    filters: [\r\n      {\r\n        text: 'Joe',\r\n        value: 'Joe',\r\n      },\r\n      {\r\n        text: 'Category 1',\r\n        value: 'Category 1',\r\n      },\r\n      {\r\n        text: 'Category 2',\r\n        value: 'Category 2',\r\n      },\r\n    ],\r\n    filterMode: 'tree',\r\n    filterSearch: true,\r\n    onFilter: (value: string, record) => record.name.startsWith(value),\r\n    width: '30%',\r\n  },\r\n  {\r\n    title: 'Age',\r\n    dataIndex: 'age',\r\n    sorter: (a, b) => a.age - b.age,\r\n  },\r\n  {\r\n    title: 'Address',\r\n    dataIndex: 'address',\r\n    filters: [\r\n      {\r\n        text: 'London',\r\n        value: 'London',\r\n      },\r\n      {\r\n        text: 'New York',\r\n        value: 'New York',\r\n      },\r\n    ],\r\n    onFilter: (value: string, record) => record.address.startsWith(value),\r\n    filterSearch: true,\r\n    width: '40%',\r\n  },\r\n];\r\n\r\nconst data: DataType[] = [\r\n  {\r\n    key: '1',\r\n    name: 'John Brown',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'Jim Green',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'Joe Black',\r\n    age: 32,\r\n    address: 'Sidney No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'Jim Red',\r\n    age: 32,\r\n    address: 'London No. 2 Lake Park',\r\n  },\r\n];\r\n\r\nconst onChange: TableProps<DataType>['onChange'] = (pagination, filters, sorter, extra) => {\r\n  console.log('params', pagination, filters, sorter, extra);\r\n};\r\n\r\nconst App: React.FC = () => <Table columns={columns} dataSource={data} onChange={onChange} />;\r\n\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,KAAK,QAAQ,MAAM;AAAC;AAU7B,MAAMC,OAA8B,GAAG,CACrC;EACEC,KAAK,EAAE,MAAM;EACbC,SAAS,EAAE,MAAM;EACjBC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE;EACT,CAAC,EACD;IACED,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE;EACT,CAAC,EACD;IACED,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE;EACT,CAAC,CACF;EACDC,UAAU,EAAE,MAAM;EAClBC,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE,CAACH,KAAa,EAAEI,MAAM,KAAKA,MAAM,CAACC,IAAI,CAACC,UAAU,CAACN,KAAK,CAAC;EAClEO,KAAK,EAAE;AACT,CAAC,EACD;EACEX,KAAK,EAAE,KAAK;EACZC,SAAS,EAAE,KAAK;EAChBW,MAAM,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,GAAG,GAAGD,CAAC,CAACC;AAC9B,CAAC,EACD;EACEf,KAAK,EAAE,SAAS;EAChBC,SAAS,EAAE,SAAS;EACpBC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;EACT,CAAC,EACD;IACED,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE;EACT,CAAC,CACF;EACDG,QAAQ,EAAE,CAACH,KAAa,EAAEI,MAAM,KAAKA,MAAM,CAACQ,OAAO,CAACN,UAAU,CAACN,KAAK,CAAC;EACrEE,YAAY,EAAE,IAAI;EAClBK,KAAK,EAAE;AACT,CAAC,CACF;AAED,MAAMM,IAAgB,GAAG,CACvB;EACEC,GAAG,EAAE,GAAG;EACRT,IAAI,EAAE,YAAY;EAClBM,GAAG,EAAE,EAAE;EACPC,OAAO,EAAE;AACX,CAAC,EACD;EACEE,GAAG,EAAE,GAAG;EACRT,IAAI,EAAE,WAAW;EACjBM,GAAG,EAAE,EAAE;EACPC,OAAO,EAAE;AACX,CAAC,EACD;EACEE,GAAG,EAAE,GAAG;EACRT,IAAI,EAAE,WAAW;EACjBM,GAAG,EAAE,EAAE;EACPC,OAAO,EAAE;AACX,CAAC,EACD;EACEE,GAAG,EAAE,GAAG;EACRT,IAAI,EAAE,SAAS;EACfM,GAAG,EAAE,EAAE;EACPC,OAAO,EAAE;AACX,CAAC,CACF;AAED,MAAMG,QAA0C,GAAG,CAACC,UAAU,EAAElB,OAAO,EAAEU,MAAM,EAAES,KAAK,KAAK;EACzFC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,UAAU,EAAElB,OAAO,EAAEU,MAAM,EAAES,KAAK,CAAC;AAC3D,CAAC;AAED,MAAMG,GAAa,GAAG,mBAAM,QAAC,KAAK;EAAC,OAAO,EAAEzB,OAAQ;EAAC,UAAU,EAAEkB,IAAK;EAAC,QAAQ,EAAEE;AAAS;EAAA;EAAA;EAAA;AAAA,QAAG;AAAC,KAAxFK,GAAa;AAEnB,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}