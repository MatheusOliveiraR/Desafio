{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Downloads\\\\desafio\\\\frontend-desafio\\\\src\\\\Body\\\\BodyList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name'\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nconst data = [];\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`\n  });\n}\nconst App = () => {\n  _s();\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const onSelectChange = newSelectedRowKeys => {\n    console.log('selectedRowKeys changed: ', newSelectedRowKeys);\n    setSelectedRowKeys(newSelectedRowKeys);\n  };\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [Table.SELECTION_ALL, Table.SELECTION_INVERT, Table.SELECTION_NONE, {\n      key: 'odd',\n      text: 'Select Odd Row',\n      onSelect: changableRowKeys => {\n        let newSelectedRowKeys = [];\n        newSelectedRowKeys = changableRowKeys.filter((_, index) => {\n          if (index % 2 !== 0) {\n            return false;\n          }\n          return true;\n        });\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }, {\n      key: 'even',\n      text: 'Select Even Row',\n      onSelect: changableRowKeys => {\n        let newSelectedRowKeys = [];\n        newSelectedRowKeys = changableRowKeys.filter((_, index) => {\n          if (index % 2 !== 0) {\n            return true;\n          }\n          return false;\n        });\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Table, {\n    rowSelection: rowSelection,\n    columns: columns,\n    dataSource: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"AGfOs+7sjQarz8vBaL7lsXNTa7o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Table","columns","title","dataIndex","data","i","push","key","name","age","address","App","selectedRowKeys","setSelectedRowKeys","onSelectChange","newSelectedRowKeys","console","log","rowSelection","onChange","selections","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","text","onSelect","changableRowKeys","filter","_","index"],"sources":["C:/Users/mathe/Downloads/desafio/frontend-desafio/src/Body/BodyList.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table } from 'antd';\r\nimport type { ColumnsType } from 'antd/es/table';\r\nimport type { TableRowSelection } from 'antd/es/table/interface';\r\n\r\ninterface DataType {\r\n  key: React.Key;\r\n  name: string;\r\n  age: number;\r\n  address: string;\r\n}\r\n\r\nconst columns: ColumnsType<DataType> = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: 'Age',\r\n    dataIndex: 'age',\r\n  },\r\n  {\r\n    title: 'Address',\r\n    dataIndex: 'address',\r\n  },\r\n];\r\n\r\nconst data: DataType[] = [];\r\nfor (let i = 0; i < 46; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `Edward King ${i}`,\r\n    age: 32,\r\n    address: `London, Park Lane no. ${i}`,\r\n  });\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\r\n\r\n  const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\r\n    console.log('selectedRowKeys changed: ', newSelectedRowKeys);\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  const rowSelection: TableRowSelection<DataType> = {\r\n    selectedRowKeys,\r\n    onChange: onSelectChange,\r\n    selections: [\r\n      Table.SELECTION_ALL,\r\n      Table.SELECTION_INVERT,\r\n      Table.SELECTION_NONE,\r\n      {\r\n        key: 'odd',\r\n        text: 'Select Odd Row',\r\n        onSelect: (changableRowKeys) => {\r\n          let newSelectedRowKeys = [];\r\n          newSelectedRowKeys = changableRowKeys.filter((_, index) => {\r\n            if (index % 2 !== 0) {\r\n              return false;\r\n            }\r\n            return true;\r\n          });\r\n          setSelectedRowKeys(newSelectedRowKeys);\r\n        },\r\n      },\r\n      {\r\n        key: 'even',\r\n        text: 'Select Even Row',\r\n        onSelect: (changableRowKeys) => {\r\n          let newSelectedRowKeys = [];\r\n          newSelectedRowKeys = changableRowKeys.filter((_, index) => {\r\n            if (index % 2 !== 0) {\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n          setSelectedRowKeys(newSelectedRowKeys);\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Table rowSelection={rowSelection} columns={columns} dataSource={data} />;\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,MAAM;AAAC;AAW7B,MAAMC,OAA8B,GAAG,CACrC;EACEC,KAAK,EAAE,MAAM;EACbC,SAAS,EAAE;AACb,CAAC,EACD;EACED,KAAK,EAAE,KAAK;EACZC,SAAS,EAAE;AACb,CAAC,EACD;EACED,KAAK,EAAE,SAAS;EAChBC,SAAS,EAAE;AACb,CAAC,CACF;AAED,MAAMC,IAAgB,GAAG,EAAE;AAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;EAC3BD,IAAI,CAACE,IAAI,CAAC;IACRC,GAAG,EAAEF,CAAC;IACNG,IAAI,EAAG,eAAcH,CAAE,EAAC;IACxBI,GAAG,EAAE,EAAE;IACPC,OAAO,EAAG,yBAAwBL,CAAE;EACtC,CAAC,CAAC;AACJ;AAEA,MAAMM,GAAa,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAc,EAAE,CAAC;EAEvE,MAAMe,cAAc,GAAIC,kBAA+B,IAAK;IAC1DC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,kBAAkB,CAAC;IAC5DF,kBAAkB,CAACE,kBAAkB,CAAC;EACxC,CAAC;EAED,MAAMG,YAAyC,GAAG;IAChDN,eAAe;IACfO,QAAQ,EAAEL,cAAc;IACxBM,UAAU,EAAE,CACVpB,KAAK,CAACqB,aAAa,EACnBrB,KAAK,CAACsB,gBAAgB,EACtBtB,KAAK,CAACuB,cAAc,EACpB;MACEhB,GAAG,EAAE,KAAK;MACViB,IAAI,EAAE,gBAAgB;MACtBC,QAAQ,EAAGC,gBAAgB,IAAK;QAC9B,IAAIX,kBAAkB,GAAG,EAAE;QAC3BA,kBAAkB,GAAGW,gBAAgB,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;UACzD,IAAIA,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;YACnB,OAAO,KAAK;UACd;UACA,OAAO,IAAI;QACb,CAAC,CAAC;QACFhB,kBAAkB,CAACE,kBAAkB,CAAC;MACxC;IACF,CAAC,EACD;MACER,GAAG,EAAE,MAAM;MACXiB,IAAI,EAAE,iBAAiB;MACvBC,QAAQ,EAAGC,gBAAgB,IAAK;QAC9B,IAAIX,kBAAkB,GAAG,EAAE;QAC3BA,kBAAkB,GAAGW,gBAAgB,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;UACzD,IAAIA,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;YACnB,OAAO,IAAI;UACb;UACA,OAAO,KAAK;QACd,CAAC,CAAC;QACFhB,kBAAkB,CAACE,kBAAkB,CAAC;MACxC;IACF,CAAC;EAEL,CAAC;EAED,oBAAO,QAAC,KAAK;IAAC,YAAY,EAAEG,YAAa;IAAC,OAAO,EAAEjB,OAAQ;IAAC,UAAU,EAAEG;EAAK;IAAA;IAAA;IAAA;EAAA,QAAG;AAClF,CAAC;AAAC,GA/CIO,GAAa;AAAA,KAAbA,GAAa;AAiDnB,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}