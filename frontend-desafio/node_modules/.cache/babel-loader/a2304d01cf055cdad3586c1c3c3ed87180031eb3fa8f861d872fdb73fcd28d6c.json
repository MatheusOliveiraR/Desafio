{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Downloads\\\\desafio\\\\frontend-desafio\\\\src\\\\Body\\\\Body.tsx\",\n  _s = $RefreshSig$();\nimport { Form, Input, Select } from 'antd';\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Body() {\n  _s();\n  const [name, setName] = useState('');\n  const {\n    Option\n  } = Select;\n  const onGenderChange = (e, value) => {\n    const formRef = /*#__PURE__*/React.createRef();\n    switch (value) {\n      case 'male':\n        formRef.current.setFieldsValue({\n          note: 'Hi bro'\n        });\n        return;\n      case 'female':\n        formRef.current.setFieldsValue({\n          note: 'Hi girl'\n        });\n        return;\n      case 'other':\n        formRef.current.setFieldsValue({\n          note: 'Hi other'\n        });\n        return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ['name'],\n        label: \"Nome completo\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ['email'],\n        label: \"email\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ['phone'],\n        label: \"Telefone\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"gender\",\n        label: \"Gen\\xEAro\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Selecione uma op\\xE7\\xE3o\",\n          onChange: onGenderChange,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"Masculino\",\n            children: \"male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Feminino\",\n            children: \"female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Outro\",\n            children: \"other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Body, \"17ovvp4+BQ/7zN2L0Q9MElPn7yM=\");\n_c = Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["Form","Input","Select","React","useState","Body","name","setName","Option","onGenderChange","e","value","formRef","createRef","current","setFieldsValue","note","required"],"sources":["C:/Users/mathe/Downloads/desafio/frontend-desafio/src/Body/Body.tsx"],"sourcesContent":["import { Form, Button, Input, Select} from 'antd'\r\nimport {FormInstance} from 'antd/es/form'\r\nimport React from 'react';\r\n\r\nimport { useState } from 'react'\r\n\r\nexport default function Body(){\r\n  const [name,setName]= useState('')\r\n  const { Option } = Select;\r\n\r\n\r\n  const onGenderChange = (e: React.ChangeEvent, value: string)=>{\r\n    const formRef = React.createRef<FormInstance>();\r\n    switch(value){\r\n        case 'male':\r\n            formRef.current!.setFieldsValue({note: 'Hi bro'});\r\n            return;\r\n        \r\n        case 'female':\r\n            formRef.current!.setFieldsValue({note: 'Hi girl'});\r\n            return;\r\n        case 'other':\r\n            formRef.current!.setFieldsValue({note: 'Hi other'});\r\n            return;\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <Form>\r\n        <Form.Item\r\n            name={['name']}\r\n            label= \"Nome completo\"\r\n            rules={[{required: true}]}\r\n        >\r\n            <Input></Input>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            name={['email']}\r\n            label=\"email\"\r\n            rules={[{required: true}]}\r\n        >   \r\n            <Input></Input>\r\n\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            name={['phone']}\r\n            label=\"Telefone\"\r\n            rules={[{required: true}]}\r\n        >\r\n            <Input></Input>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"gender\" label=\"Genêro\" rules={[{required: true}]}>\r\n            <Select\r\n                placeholder='Selecione uma opção'\r\n                onChange={onGenderChange}\r\n            >                \r\n                <Option value=\"Masculino\">male</Option>\r\n                <Option value=\"Feminino\">female</Option>\r\n                <Option value=\"Outro\">other</Option>\r\n            </Select>\r\n        </Form.Item>\r\n\r\n\r\n    </Form>\r\n  </>\r\n\r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAUC,KAAK,EAAEC,MAAM,QAAO,MAAM;AAEjD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAEhC,eAAe,SAASC,IAAI,GAAE;EAAA;EAC5B,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAEH,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM;IAAEI;EAAO,CAAC,GAAGN,MAAM;EAGzB,MAAMO,cAAc,GAAG,CAACC,CAAoB,EAAEC,KAAa,KAAG;IAC5D,MAAMC,OAAO,gBAAGT,KAAK,CAACU,SAAS,EAAgB;IAC/C,QAAOF,KAAK;MACR,KAAK,MAAM;QACPC,OAAO,CAACE,OAAO,CAAEC,cAAc,CAAC;UAACC,IAAI,EAAE;QAAQ,CAAC,CAAC;QACjD;MAEJ,KAAK,QAAQ;QACTJ,OAAO,CAACE,OAAO,CAAEC,cAAc,CAAC;UAACC,IAAI,EAAE;QAAS,CAAC,CAAC;QAClD;MACJ,KAAK,OAAO;QACRJ,OAAO,CAACE,OAAO,CAAEC,cAAc,CAAC;UAACC,IAAI,EAAE;QAAU,CAAC,CAAC;QACnD;IAAO;EAEjB,CAAC;EAED,oBAAO;IAAA,uBACL,QAAC,IAAI;MAAA,wBACD,QAAC,IAAI,CAAC,IAAI;QACN,IAAI,EAAE,CAAC,MAAM,CAAE;QACf,KAAK,EAAE,eAAe;QACtB,KAAK,EAAE,CAAC;UAACC,QAAQ,EAAE;QAAI,CAAC,CAAE;QAAA,uBAE1B,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACP,eAEZ,QAAC,IAAI,CAAC,IAAI;QACN,IAAI,EAAE,CAAC,OAAO,CAAE;QAChB,KAAK,EAAC,OAAO;QACb,KAAK,EAAE,CAAC;UAACA,QAAQ,EAAE;QAAI,CAAC,CAAE;QAAA,uBAE1B,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QAEP,eAEZ,QAAC,IAAI,CAAC,IAAI;QACN,IAAI,EAAE,CAAC,OAAO,CAAE;QAChB,KAAK,EAAC,UAAU;QAChB,KAAK,EAAE,CAAC;UAACA,QAAQ,EAAE;QAAI,CAAC,CAAE;QAAA,uBAE1B,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACP,eAEZ,QAAC,IAAI,CAAC,IAAI;QAAC,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC,WAAQ;QAAC,KAAK,EAAE,CAAC;UAACA,QAAQ,EAAE;QAAI,CAAC,CAAE;QAAA,uBAC9D,QAAC,MAAM;UACH,WAAW,EAAC,2BAAqB;UACjC,QAAQ,EAAER,cAAe;UAAA,wBAEzB,QAAC,MAAM;YAAC,KAAK,EAAC,WAAW;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAc,eACvC,QAAC,MAAM;YAAC,KAAK,EAAC,UAAU;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgB,eACxC,QAAC,MAAM;YAAC,KAAK,EAAC,OAAO;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAe;QAAA;UAAA;UAAA;UAAA;QAAA;MAC/B;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA;EAGT,iBACN;AAEL;AAAC,GA/DuBJ,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}